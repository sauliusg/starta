
type int = {
    size = sizeof native "int";
    inline bytecode operator "%" ( x : int; y : int ) : int
        { bytecode{ MOD }};
    inline bytecode operator "ldc" () : int
	{ LDCS };
    inline bytecode operator ">" ( i, j : int ) : int
	{ GT };
    inline bytecode operator "jz" ( i : int )
	{ JZ };
    inline bytecode operator "jnz" ( i : int )
	{ JNZ };
    inline bytecode operator "loop" ( cnt : addressof; lim : int )
	{ LOOP };
};

var i : int;

function writeln( x : int )
{
    bytecode { LD %x IPRINT NEWLINE }
};

function eq( x, y : int )
{
    bytecode { LD %x LD %y EQ }
};

function mod( x, y : int )
{
    bytecode { LD %x LD %y MOD }
};

for i = 1 to 1000000 do
    if bytecode : int { LD %i LDC 100000 MOD LDC 0 EQ } then
	writeln( i );
    endif;
enddo
