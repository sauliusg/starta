//--*- Java -*--
// Compiler tests
//

use * from std;

inline bytecode procedure push( a : array of type T; value : T )
    -> array of type T
{
    APUSH
}

inline bytecode function nref( a : array ): int { NREF }
inline bytecode function capacity( a : array ): int { CAPACITY }
inline bytecode function trim( a : array of T ): array of T { TRIM }

function print_array( array of type T a; function ( T element ) print )
{
    foreach var T e in a do
        print( e );
    enddo
}

var m = new int[0];

. "length(m) ==", length(m);
. "nref(m)   ==", nref(m);

var n = 0;
while true {
    m = push( m, n );
    var l = length(m);
    if l < 16 or l % 100 == 0 { . l, capacity(m), capacity(m=trim(m)) }
    n ++;
    do break if n > 10000
}
