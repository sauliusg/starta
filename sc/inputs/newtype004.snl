// --*- C -*--

// Test derived types.

use std;

type synint = int;

type newint1 = new int {
    inline bytecode operator "+" ( c1, c2 : newint1 ) : newint1
    {
        SLDC "This is the newint1 \"+\" operator\n"
        SPRINT
        ADD
    }
};

type newint2 = new int {
    inline bytecode operator "+" ( c1, c2 : newint2 ) : newint2
    {
        SLDC "This is the newint2 \"+\" operator\n"
        SPRINT
        ADD
    }
};

var i, j, k : int;
var x, y, z : synint;
var a, b, c : newint1;
var t, u, v : newint2;

x = i; // OK
j = y; // OK

x = 1; // OK
a = 2 newint1; // OK, explicit constant type

x = y + k; // OK
x = y + z; // OK

x = k + y; // OK
x = z + y; // OK

b = a + c + 3 newint1; // OK
t = u + v; // OK

. b; // OK, should print '5'
