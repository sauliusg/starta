
use std;

var x, y, z = 1, 20, 3;

var fff = closure procedure( x, y : float ): float
lambda {
    var a : int = x + 1;
    var b : int = y + z;
    var s : string = "va va";
}
{ 
  lambda.a ++;
  return x*y/(lambda.a + lambda.b)@float
};

var ggg : procedure( x, y : float ) -> (float);

ggg = fff;

x, y, z = 20, 40, 60;

. fff( 2, 3 );
. fff( 2, 3 );
. fff( 2, 3 );
. fff( 5, 3 );

. "";

var m = new procedure(x,y:float)->(float) [10];

for var i = 0 to last(m) do
    if( i == 0 ) {
        m[i] = fff;
    } else {
        m[i] = closure( x, y : float ): float
               local { var a : float = i }
               {
                   return x * y + local.a;
               };
    }
enddo;

for var i = 0 to last(m) do
    if m[i] != null then
        . m[i]( 2, 3 );
    endif
enddo
