#
# Snail language compiler tests
#
# Test of simple arithmetics.
#

type int  = {
    size = 4; kind = integer;
    inline bytecode operator "+" ( x : int; y : int ) : int
        { ADD };
    inline bytecode operator "-" ( x : int; y : int ) : int
        { bytecode{ SUB }};
    bytecode inline operator "*" ( x : int; y : int ) : int
        { bytecode{ MUL }};
    bytecode inline operator "/" ( x : int; y : int ) : int
        { bytecode{ DIV }};
    bytecode inline operator "%" ( x : int; y : int ) : int
        { bytecode{ MOD }};
    inline bytecode operator "ldc" () : int
        { LDCS }
};

type long = {
    size = 8; kind = integer; suffix = L;
    bytecode inline operator "+" ( x : long; y : long ) : long
        { bytecode{ LADD }};
    bytecode inline operator "-" ( x : long; y : long ) : long
        { bytecode{ LSUB }};
    bytecode inline operator "*" ( x : long; y : long ) : long
        { bytecode{ LMUL }};
    bytecode inline operator "/" ( x : long; y : long ) : long
        { bytecode{ LDIV }};
    bytecode inline operator "%" ( x : long; y : long ) : long
        { bytecode{ LMOD }};
    inline bytecode operator "ldc" () : int
        { LLDCS }
};

var a, b : int;
var c, d : int;

a = 11;
b = 35;
c = 21;

bytecode function writeln( i : int )
{
    bytecode { IPRINT NEWLINE }
};

bytecode function write( i : int )
{
    bytecode { IPRINT }
};

d = ( a + b ) / ( a - c );

writeln( d );

a = b - d * c + a;

writeln( a );
