
from std use *;

interface If {
    method f( x : int ): int;
    method s() : string;
}

interface Ig {
    method g( x, y, z : int ): int;
    method s() : string;
}

class S implements If, Ig {
    int i;
    float k;

    method r(): string
    {
        return "This is r() of S"
    }

    method s(): string
    {
        return "This is s() of S"
    }

    method t(): string
    {
        return "This is t() of S"
    }

    method g @ Ig( x, y, z :  int ) : int
    {
        return x + y - z + 2
    }
    method f @ If( x : int ) : int
    {
        return x * x;
    }
    method s @ If() -> (string)
    {
        return "This is S implementtion of If.s()"
    }
    method s @ Ig() -> (string)
    {
        return "This is S implementtion of Ig.s()"
    }
}

var s = new S;

. s->s@If();
. s->s@Ig();
. s->s();

. "here";

