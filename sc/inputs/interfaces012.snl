#
# Check implementation of interfaces with the same method names.
#

# Check that interfaces can be declared with the same method names.

from std use *;

interface I1 {
    method add( int i );
    method sub( int i );
    method get(): int;
}

interface I2 {
    method add( int i );
    method remove( int i );
    method get(): array of int;
}

class CC implements I1, I2 {
    int i;
    int n; // the count in the array m[]
    int m[];

    method add@I1( int i )
    {
        self.i += i;
    }

    method sub@I1( int i )
    {
        self.i -= i;
    }

    method get@I1(): int { return self.i }

    method add@I2( int i )
    {
        if( !self.m ) {
            self.m = new int[10];
        }
        self.m[self.n] = i;
        self.n ++;
    }

    method remove@I2( int i )
    {
        do self.n -= i if self.n >= i;
    }

    method get@I2() : array of int
    {
        return self.m;
    }
}

var c = new CC;

c->add@I1( 4 );
c->add@I1( 3 );
. c->get@I1();

procedure g( I1 o )
{
   o->add( -o->get() );
   . o->get();
}

g( c );

c->add@I2( 34 );
c->add@I2( 33 );
. c->get@I2()[0];

foreach var m in c->get@I2()
do
    < m, " ";
enddo
. "";

procedure hh( I2 o )
begin
    o->remove( 1 );
    o->add( 78 );
    foreach var m in c->get@I2()
    do
        < m, " ";
    enddo
    . ""    
end;

hh( c );
