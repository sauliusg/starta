#
# Snail language compiler tests
#
# Test structures and field access.
#

type int   = {
    size = 4;
    kind = integer;
    inline bytecode operator "." ( i : int )
        { IPRINT };
    inline bytecode operator "ldc" () : int
        { LDCS };
}

type long  = {
    size = 8;
    kind = integer;
    suffix = L;
    inline bytecode operator "." ( l : long )
        { LPRINT };
    inline bytecode operator "ldc" () : long
        { LLDCS };
/*
    inline bytecode operator "ld" ( l : long )
        { LLD };
    inline bytecode operator "lda" ( l : long )
        { LLDA };
    inline bytecode operator "ldc" ( l : long )
        { LLDC };
    inline bytecode operator "st" ( l : long )
        { LST };
*/
}

type float = {
    size = 4;
    kind = real;
    inline bytecode operator "." ( x : float )
        { FPRINT };
    inline bytecode operator "ld" ( x : float )
        { FLD };
    inline bytecode operator "@float" ( i : int ) : float
        { I2F };
    inline bytecode operator "@float" ( i : long ) : float
        { I2F };
    inline bytecode operator "+" ( x, y : float ) : float
        { FADD };
    inline bytecode operator "ldc" () : float
        { FLDCS };
}

var i : int;
var l : long;
var x, y : float; 

i = 5;
l = 17L;
x = 1.34;

. i;
. l;
. x;

x = i @ float;
. x;

x = l @ float;
. x;

y = x;
. y;

y = y + x;
. y;
