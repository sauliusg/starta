
// from std use *;

module N

    type myint = {
        kind = integer;
        suffix = "I";
        size = sizeof native "int";

        inline bytecode operator "ldc" () : myint
        { LDCS }
    };

    inline bytecode operator "+" ( a, b : myint ): myint
    { ADD }

    inline bytecode operator "." ( i : myint )
    { IPRINT }

end module N;

from N use *;

var i = 12 I;

. i;

module M

    from N use *;

    inline bytecode operator "*"  ( a, b : myint ): myint
    { MUL }

end module M;

from M use *;

. i * i;
