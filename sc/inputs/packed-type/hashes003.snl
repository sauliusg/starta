
use std;

type hash of T = ?{
    reference;

    inline bytecode operator "new[int]" ( i : int ) : hash of T
    { HASHALLOC %%element_size %%element_nref %%element_align };

    inline bytecode operator "[string]" ( h : hash of T; key : string ) 
        : addressof
    { HASHADDR %%element_size };

    inline bytecode operator "ldx" ( h : ref /*addressof*/; key : string ) : T
    { HASHVAL %%element_size };

    inline bytecode operator "pldx" ( h : ref /*addressof*/; key : string ) : T
    { HASHPTR }
};

var h = new hash [5] of byte;

var s = "%s" %% "key string";

h[s] = 12B;

s = null;

var k = "%s" %% "another key string";

h[k] = 16B;

k = null;

s = "%s" %% "key string";
k = "%s" %% "another key string";

s = "%s" %% "key string";
k = "%s" %% "another key string";

h[s] = 120B;
h[k] = 25B;

. s, h[s];
. k, h[k];

s = "%s" %% "key string";
k = "_" _ "%s" %% "another key string" _ "_";

h[s] = 120B;
h[k] = 25B;

. s, h[s];
. k, h[k];

// bytecode { LD %h HASHDUMP }
