
use std;

interface If {
    method f( x : int ): int;
    method s() : string;
}

. "If.f.offset =", const(If.f.offset);
. "If.s.offset =", const(If.s.offset);

. "there";

interface Ig {
    method g( x, y, z : int ): int;
    method s() : string;
}

class S implements If, Ig {
    int i;
    float k;

    method g implements Ig.g( x, y :  int ) : int
    {
        return x + 2
    }
    method f implements f( x : int )
    {
        return;
    }
    method sf implements If.s() -> (int)
    {
        return 42
    }
    method sg implements Module::Ig.s( char x ) -> (string)
    {
        return "This is S implementtion of Ig.s()"
    }
}

. "S.size = ", const(S.size);

var s = new S;

## s->a(20);

. "here";

