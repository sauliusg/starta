#
# Compiler tests
#
#
# Test interfaces
#

use * from std;

interface I1 {
    method m1() -> (string);
    method m2() -> (string);
}

interface I2 {
    method m1() -> (string);
    method m2() -> (string);
}

class A implements I1, I2
{
    method m1@I1()->(string) { . "A: m1@I1"; return "" };
    method m2@I1()->(string) { . "A: m2@I1"; return "" };
    method m1@I2()->(string) { . "A: m1@I2"; return "" };
    method m2@I2()->(string) { . "A: m2@I2"; return "" };
}

class C implements I1, I2 {
    method m()
    {
        var c : null class {
            method x@X() {}
        };

        var a = new A;

        a->d@XX();

        var x : C = new C;

        x->m1@I3();
    }
}
