
// use std;

module N

    type myint = {
        kind = integer;
        suffix = "I";
        size = sizeof native "int";

        inline bytecode operator "ldc" () : myint
        { LDCS }
    };

    inline bytecode operator "+" ( a, b : myint ): myint
    { ADD }

    inline bytecode operator "." ( i : myint )
    { IPRINT }

end module N;

use N;

var i = 12 I;

. i;

module M

    use N;

    inline bytecode operator "*"  ( a, b : myint ): myint
    { MUL }

end module M;

// use M;

. i * i;
