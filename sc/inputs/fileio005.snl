#
# Snail compiler tests
#
#
# Test different exceptional conditions in file read and write.
#

include "inputs/stdtypes.slib"
include "inputs/stdio.slib"

inline bytecode function asstring( s : blob ): string {};

const N = 64;

var files : array of file = new file[4];
var f : file;
// var m = new record { b : array [N] of byte };
var m = new blob(const(N));
var i : int;
var l : long;

try {
    files[1] = fopen( "nonexistent.txt", "r" );
}

files[2] = fopen( "inputs/text.dat", "r" );
fclose( files[2] );

files[3] = fopen( "inputs/text.dat", "r" );

for i = 0 to last(files) {
    try {
    	l = fread( files[i], m );
	pack m, const(N-1), "i1", 0B;
	. l;
	. asstring( m );
    }
    catch ( var msg : string ) {
    	. "Exception caught:";
	. msg;
        . "";
    }
}
