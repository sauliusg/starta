/*--*-C-*--------------------------------------------------------------------*\
**$Author$
**$Date$ 
**$Revision$
**$URL$
\*---------------------------------------------------------------------------*/

/* private allocator for dnodes */

#include <stdlib.h>
#include <cexceptions.h>
#include <allocx.h>

#if 0
#define USE_FIXED_NODE_ARRAY
#endif

#ifdef USE_FIXED_NODE_ARRAY

#define MAX_DNODES 100000

static DNODE dnodes[MAX_DNODES];
static long last_dnode;

static DNODE *alloc_dnode( cexception_t *ex )
{
    /* return callocx( sizeof(DNODE), 1, ex ); */
    assert( last_dnode < MAX_DNODES );
    /* printf( "allocating dnode %ld\n", last_dnode ); */
    return &dnodes[last_dnode++];
}

static void free_dnode( DNODE *dnode )
{
    /* freex( dnode ); return; */
    /* printf( "deleting dnode %d\n", (dnode-dnodes) ); */
    assert( dnode->rcount == 0 );
    dnode->rcount--;
}

#else

static DNODE *alloc_dnode( cexception_t *ex )
{
    return callocx( sizeof(DNODE), 1, ex );
}

static void free_dnode( DNODE *dnode )
{
    assert( dnode->rcount == 0 );
    freex( dnode );
}

#endif
