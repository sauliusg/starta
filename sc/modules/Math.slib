package Math;

use * from std;

load "libraries/math/libmath.so.0.01";

inline bytecode operator "**" ( x : float; y : float ) : float
{ libmath:FPOW }

inline bytecode operator "**" ( x : double; y : double ) : double
{ libmath:DPOW }

inline bytecode operator "**" ( x : ldouble; y : ldouble ) : ldouble
{ libmath:LDPOW }

inline bytecode operator "**" ( x : float; n : int ) : float
{ I2F libmath:FPOW }

inline bytecode operator "**" ( x : double; n : int ) : double
{ I2D libmath:DPOW }

inline bytecode operator "**" ( x : ldouble; n : int ) : ldouble
{ I2LD libmath:LDPOW }

inline bytecode function lroundf( float x ) : long
{
    FLDC 0.5 FADD libmath:LFLOOR
}

inline bytecode function roundf( float x ) : int
{
    FLDC 0.5 FADD libmath:LFLOOR LOWINT
}

inline bytecode function lfloorf( float x ) : long
{
    libmath:LFLOOR
}

inline bytecode function floorf( float x ) : int
{
    libmath:LFLOOR LOWINT
}

inline bytecode function lround( double x ) : long
{
    FLDC 0.5 F2D DADD libmath:LFLOORD
}

inline bytecode function lfloor( double x ) : long
{
    libmath:LFLOORD
}

inline bytecode function round( double x ) : int
{
    FLDC 0.5 F2D DADD libmath:LFLOORD LOWINT
}

inline bytecode function floor( double x ) : int
{
    libmath:LFLOORD LOWINT
}

inline bytecode function llroundl( ldouble x ) : llong
{
    FLDC 0.5 F2LD LDADD libmath:LLFLOORLD
}

inline bytecode function llfloorl( ldouble x ) : llong
{
    libmath:LLFLOORLD
}

inline bytecode function lroundl( ldouble x ) : long
{
    FLDC 0.5 F2LD LDADD libmath:LLFLOORLD LOWLONG
}

inline bytecode function lfloorl( ldouble x ) : long
{
    libmath:LLFLOORLD LOWLONG
}

inline bytecode function sinf( float x ) : float
{
    libmath:FCALL libmath:sinf
}

inline bytecode function sinl( ldouble x ) : ldouble
{
    libmath:LDCALL libmath:sinl
}

inline bytecode function sin( double x ) : double
{
    libmath:DCALL libmath:sin
}

inline bytecode function cosf( float x ) : float
{
    libmath:FCALL libmath:cosf
}

inline bytecode function cosl( ldouble x ) : ldouble
{
    libmath:LDCALL libmath:cosl
}

inline bytecode function cos( double x ) : double
{
    libmath:DCALL libmath:cos
}

inline bytecode function atan2( double x, y ) : double
{
    libmath:DCALL2 libmath:atan2
}

inline bytecode function atan2f( float x, y ) : float
{
    libmath:FCALL2 libmath:atan2f
}

inline bytecode function atan2l( ldouble x, y ) : ldouble
{
    libmath:LDCALL2 libmath:atan2l
}

inline bytecode function acosf( float x ): float
{
    libmath:FCALL libmath:acosf
}

inline bytecode function acos( double x ): double
{
    libmath:DCALL libmath:acos
}

inline bytecode function acosl( ldouble x ): ldouble
{
    libmath:LDCALL libmath:acosl
}

inline bytecode function asinf( float x ): float
{
    libmath:FCALL libmath:asinf
}

inline bytecode function asin( double x ): double
{
    libmath:DCALL libmath:asin
}

inline bytecode function asinl( ldouble x ): ldouble
{
    libmath:LDCALL libmath:asinl
}

inline bytecode function sqrtf( float x ) : float
{
    libmath:FCALL libmath:sqrtf
}

inline bytecode function sqrtl( ldouble x ) : ldouble
{
    libmath:LDCALL libmath:sqrtl
}

inline bytecode function sqrt( double x ) : double
{
    libmath:DCALL libmath:sqrt
}

inline bytecode function fabs( float x ) : float
{
    libmath:FABS
}

inline bytecode function dabs( double x ) : double
{
    libmath:DABS
}

inline bytecode function ldabs( ldouble x ) : ldouble
{
    libmath:LDABS
}

end package Math;
