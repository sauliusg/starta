
from std use *;

type hash of T = {
    reference;

    inline bytecode operator "new[int]" ( i : int ) : hash of T
    { HASHALLOC %%element_size %%element_nref %%element_align };

    inline bytecode operator "[string]" ( h : hash of T; key : string ) 
        : addressof
    { HASHADDR %%element_size };

    inline bytecode operator "ldx" ( h : ref /*addressof*/; key : string ) : T
    { HASHVAL %%element_size };

    inline bytecode operator "pldx" ( h : ref /*addressof*/; key : string ) : T
    { HASHPTR }
};

const N = 5000;

var table = new hash [const(N)] of int;
var keys = new array [const(N)] of string;

for var i = 0 to last( keys ) do
    keys[i] = "xx%dyy" %% i;
enddo;

. "table filled";

for var i = 0 to 1000 do
    for var j = 0 to 1000 do
    	var ii = (i*j) % length(keys);
    	table[keys[ii]] = i;
    enddo
enddo
