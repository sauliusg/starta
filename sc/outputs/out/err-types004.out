./sl: inputs/err-types004.snl(10,21): ERROR, type 'int' is not declared in the current scope
    method add( int i );
                    ^
./sl: inputs/err-types004.snl(10,24): ERROR, Prototype of method add() does not match previous definition:
old or new prototype has undefined argument 2
    method add( int i );
                       ^
./sl: inputs/err-types004.snl(11,21): ERROR, type 'int' is not declared in the current scope
    method sub( int i );
                    ^
./sl: inputs/err-types004.snl(11,24): ERROR, Prototype of method sub() does not match previous definition:
old or new prototype has undefined argument 2
    method sub( int i );
                       ^
./sl: inputs/err-types004.snl(12,22): ERROR, type 'int' is not declared in the current scope
    method get(): int;
                     ^
./sl: inputs/err-types004.snl(12,22): ERROR, Prototype of method get() does not match previous definition:
old or new prototype undefined return values
    method get(): int;
                     ^
./sl: inputs/err-types004.snl(16,21): ERROR, type 'int' is not declared in the current scope
    method put( int i );
                    ^
./sl: inputs/err-types004.snl(16,24): ERROR, Prototype of method put() does not match previous definition:
old or new prototype has undefined argument 2
    method put( int i );
                       ^
./sl: inputs/err-types004.snl(20,16): ERROR, type 'int' is not declared in the current scope
    value : int;
               ^
./sl: inputs/err-types004.snl(22,24): ERROR, type 'int' is not declared in the current scope
    method add@I1( int i ) { self.value += i; . "This is add@I1()" }
                       ^
./sl: inputs/err-types004.snl(22,28): ERROR, method add() does not match method add it should implement - old or new prototype has undefined argument 2
    method add@I1( int i ) { self.value += i; . "This is add@I1()" }
                           ^
./sl: inputs/err-types004.snl(22,45): ERROR, incompatible types for binary operator '+'
    method add@I1( int i ) { self.value += i; . "This is add@I1()" }
                                            ^
./sl: inputs/err-types004.snl(22,68): ERROR, type with empty suffix is not defined in this scope for types of kind 'string'

    method add@I1( int i ) { self.value += i; . "This is add@I1()" }
                                                                   ^
./sl: inputs/err-types004.snl(22,68): ERROR, not enough values on the stack for unary operator '.'
    method add@I1( int i ) { self.value += i; . "This is add@I1()" }
                                                                   ^
./sl: inputs/err-types004.snl(22,68): ERROR, Prototype of method add@I1() does not match previous definition:
old or new prototype has undefined argument 2
    method add@I1( int i ) { self.value += i; . "This is add@I1()" }
                                                                   ^
./sl: inputs/err-types004.snl(23,24): ERROR, type 'int' is not declared in the current scope
    method sub@I1( int i ) { self.value -= i; . "This is sub@I1()" }
                       ^
./sl: inputs/err-types004.snl(23,28): ERROR, method sub() does not match method sub it should implement - old or new prototype has undefined argument 2
    method sub@I1( int i ) { self.value -= i; . "This is sub@I1()" }
                           ^
./sl: inputs/err-types004.snl(23,45): ERROR, incompatible types for binary operator '-'
    method sub@I1( int i ) { self.value -= i; . "This is sub@I1()" }
                                            ^
./sl: inputs/err-types004.snl(23,68): ERROR, type with empty suffix is not defined in this scope for types of kind 'string'

    method sub@I1( int i ) { self.value -= i; . "This is sub@I1()" }
                                                                   ^
./sl: inputs/err-types004.snl(23,68): ERROR, not enough values on the stack for unary operator '.'
    method sub@I1( int i ) { self.value -= i; . "This is sub@I1()" }
                                                                   ^
./sl: inputs/err-types004.snl(23,68): ERROR, Prototype of method sub@I1() does not match previous definition:
old or new prototype has undefined argument 2
    method sub@I1( int i ) { self.value -= i; . "This is sub@I1()" }
                                                                   ^
./sl: inputs/err-types004.snl(28,26): ERROR, type 'int' is not declared in the current scope
    method get@I2(): int { return self.value }
                         ^
./sl: inputs/err-types004.snl(28,26): ERROR, interface 'I2' does not implement method 'get'
    method get@I2(): int { return self.value }
                         ^
./sl: inputs/err-types004.snl(28,46): ERROR, incompatible types of returned value 1 of function 'get@I2'
    method get@I2(): int { return self.value }
                                             ^
./sl: inputs/err-types004.snl(28,46): ERROR, Prototype of method get@I2() does not match previous definition:
old or new prototype undefined return values
    method get@I2(): int { return self.value }
                                             ^
./sl: inputs/err-types004.snl(29,24): ERROR, type 'int' is not declared in the current scope
    method put@I2( int i )
                       ^
./sl: inputs/err-types004.snl(30,5): ERROR, method put() does not match method put it should implement - old or new prototype has undefined argument 2
    {
    ^
./sl: inputs/err-types004.snl(32,55): ERROR, type with empty suffix is not defined in this scope for types of kind 'string'

        . "put@I2 implemented by A: setting self.i to", i
                                                      ^
./sl: inputs/err-types004.snl(32,55): ERROR, not enough values on the stack for unary operator '.'
        . "put@I2 implemented by A: setting self.i to", i
                                                      ^
./sl: inputs/err-types004.snl(33,5): ERROR, Prototype of method put@I2() does not match previous definition:
old or new prototype has undefined argument 2
    }
    ^
./sl: inputs/err-types004.snl(34,1): ERROR, class 'C' does not implement method 'add' from interface 'I1'
}
^
./sl: inputs/err-types004.snl(34,1): ERROR, class 'C' does not implement method 'sub' from interface 'I1'
}
^
./sl: inputs/err-types004.snl(34,1): ERROR, class 'C' does not implement method 'get' from interface 'I1'
}
^
./sl: inputs/err-types004.snl(34,1): ERROR, class 'C' does not implement method 'put' from interface 'I2'
}
^
./sl: inputs/err-types004.snl(38,15): ERROR, type with empty suffix is not defined in this scope for types of kind 'integer'

c->add@I1( 10 );
              ^
./sl: inputs/err-types004.snl(38,15): ERROR, incompatible types for function 'add' argument nr. 2
c->add@I1( 10 );
              ^
./sl: inputs/err-types004.snl(38,15): ERROR, too little arguments in call to function 'add'
c->add@I1( 10 );
              ^
./sl: inputs/err-types004.snl(39,15): ERROR, type with empty suffix is not defined in this scope for types of kind 'integer'

c->add@I2( 10 );
              ^
./sl: inputs/err-types004.snl(39,15): ERROR, incompatible types for function 'add' argument nr. 2
c->add@I2( 10 );
              ^
./sl: inputs/err-types004.snl(39,15): ERROR, too little arguments in call to function 'add'
c->add@I2( 10 );
              ^
./sl: inputs/err-types004.snl(42,25): ERROR, type with empty suffix is not defined in this scope for types of kind 'integer'

. const( I2.put.offset );
                        ^
./sl: inputs/err-types004.snl(44,15): ERROR, type with empty suffix is not defined in this scope for types of kind 'integer'

c->put@I2( 33 );
              ^
./sl: inputs/err-types004.snl(44,15): ERROR, incompatible types for function 'put' argument nr. 2
c->put@I2( 33 );
              ^
./sl: inputs/err-types004.snl(44,15): ERROR, too little arguments in call to function 'put'
c->put@I2( 33 );
              ^
./sl: 44 error(s) detected

