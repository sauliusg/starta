
type int = {
    size = sizeof native "int";
    inline bytecode operator "ldc" () : int
	{ LDCS };
    inline bytecode operator "jz" ( i : int )
	{ JZ };
    inline bytecode operator "jnz" ( i : int )
	{ JNZ };
};

var i : int;

function writeln( x : int )
{
    bytecode { LD %x IPRINT NEWLINE }
};

function inc( i : int )
{
    bytecode { LD %i LDC 1 ADD }
};

function lt( x, y : int )
{
    bytecode { LD %x LD %y LT }
};

function eq( x, y : int )
{
    bytecode { LD %x LD %y EQ }
};

function mod( x, y : int )
{
    bytecode { LD %x LD %y MOD }
};

for( i = 1; bytecode : int { LD %i LDC 1000000 LT };
    bytecode { LD %i LDC 1 ADD ST %i}) do
        if bytecode : int{ LD %i LDC 100000 MOD LDC 0 EQ } then
	    writeln( i );
	endif;
enddo
