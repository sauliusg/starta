/*--*- Pascal -*-------------------------------------------------------------*\
**$Author: saulius $
**$Date: 2020-04-28 09:07:35 +0300 (Tue, 28 Apr 2020) $ 
**$Revision: 6960 $
**$URL: svn+ssh://saulius.grazulis.lt/home/saulius/svn-repositories/paskaitos/VU/software/trunk/bioinformatika-III-assignments/lib/BiomoleculeAtom.slib $
\*---------------------------------------------------------------------------*/
/*
  A Starta module to define description of a biomolecule atom, used
  for representing data from PDB, CIF and PDBx files.
*/

module BiomoleculeAtom;

use std;

type Atom = class
    begin
       recordType : string; (* ATOM or HETATM *)
       string chemType;
       string atomName;
       long atomNumber;
       string residueName;
       long residueNumber;
       string altLoc; (* alternative location indicator *)
       string insCode; (* insertion code *)
       string chain;
       string authorChain; (* chain assigned by the author *)
       string segment; (* segment ID from a PDB file *)
       double B;
       double occupancy;
       double x, y, z; (* Cartesian coordinates *)
       string chargeStr;
       string entry_id;
       string entity_id;
       string model;
       string filename;

       (* the empty default constructor leaves all fields initialised
        with zeros and null pointers: *)
       constructor() {};
       
       constructor fromNumbers(recordType: string = "ATOM";
                               chemType: string;
                               atomName: string;
                               atomNumber: long;
                               residueName: string;
                               residueNumber: long;
                               chainId: string;
                               x: double;
                               y: double;
                               z: double;
                               Bfactor: double = 0.0;
                               occupancy: double = 1.0;
                               chargeStr: string = "";
                               authChain: string = null;
                               segment: string = null;
                               altLoc: string = "";
                               insCode: string = "";
                               string entity_id = "";
                               string model = "1"
                               )
       begin
          self.recordType = recordType;
          self.chemType = chemType;
          self.atomName = atomName;
          self.atomNumber = atomNumber;
          self.residueName = residueName;
          self.residueNumber = residueNumber;
          self.chain = chainId;
          self.x = x;
          self.y = y;
          self.z = z;
          self.B = Bfactor;
          self.occupancy = occupancy;
          self.chargeStr = chargeStr;
          self.authorChain = authChain != null ? authChain : chainId;
          self.segment = segment;
          self.altLoc = altLoc;
          self.insCode = insCode;
          self.entity_id = entity_id;
          self.model = model;
       end;

       constructor fromStrings(recordType: string = "ATOM";
                               chemType: string;
                               atomName: string;
                               atomNumber: string;
                               residueName: string;
                               residueNumber: string;
                               chainId: string;
                               x: string;
                               y: string;
                               z: string;
                               Bfactor: string = "0.0";
                               occupancy: string = "1.0";
                               chargeStr: string = "";
                               authChain: string = null;
                               segment: string = null;
                               altLoc: string = "";
                               insCode: string = "";
                               string entity_id = "";
                               string model = "1"
                               )
       begin
          self.recordType = recordType;
          self.chemType = chemType;
          self.atomNumber = strtol( atomNumber );
          self.residueName = residueName;
          self.residueNumber = strtol( residueNumber );
          self.chain = chainId;
          self.x = strtod( x );
          self.y = strtod( y );
          self.z = strtod( z );
          self.B = strtod( Bfactor );
          self.occupancy = strtod( occupancy );
          self.chargeStr = chargeStr;
          self.authorChain = authChain != null ? authChain : chainId;
          self.segment = segment;
          self.altLoc = altLoc;
          self.insCode = insCode;
          if( strstart( "\"", atomName ) && strend(  "\"", atomName )) {
              self.atomName = atomName[1:-2];
          } else {
              self.atomName = atomName;
          }
          self.entity_id = entity_id;
          self.model = model;
       end;

       method asString(): string
       begin
          return
          "%-6s " %% self.recordType _
          "%-2s " %% self.chemType _
          "%7d "  %% self.atomNumber _
          "%5s "  %% self.atomName _
          (self.altLoc == "" ? "." : self.altLoc) _
          "%5s "  %% self.residueName _
          "%5d"   %% self.residueNumber _
          (self.insCode == "" ? " " : self.insCode) _
          "%2s "  %% self.chain _
          "%8g "  %% self.x _
          "%8g "  %% self.y _
          "%8g "  %% self.z _
          "%6g "  %% self.B _
          "%6g"   %% self.occupancy;
       end;
       
       method asNoAtomNumberString(): string
       begin
          return
          "%-6s " %% self.recordType _
          "%-2s " %% self.chemType _
          "%5s "  %% self.atomName _
          (self.altLoc == "" ? "." : self.altLoc) _
          "%5s "  %% self.residueName _
          "%5d"   %% self.residueNumber _
          (self.insCode == "" ? " " : self.insCode) _
          "%2s "  %% self.chain _
          "%8g "  %% self.x _
          "%8g "  %% self.y _
          "%8g "  %% self.z _
          "%6g "  %% self.B _
          "%6g"   %% self.occupancy;
       end;

       method setFilename( string filename )
       begin
          self.filename = filename
       end;

       method filename(): string
       begin
          return self.filename
       end;
       
    end; (* class Atom *)

end module BiomoleculeAtom;
