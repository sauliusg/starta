/*--*- C -*------------------------------------------------------------------*\
**$Author: saulius $
**$Date: 2019-04-21 16:57:57 +0300 (Sun, 21 Apr 2019) $ 
**$Revision: 5729 $
**$URL: svn+ssh://saulius.grazulis.lt/home/saulius/svn-repositories/paskaitos/VU/software/trunk/bioinformatika-III-assignments/lib/VectorArithm.slib $
\*---------------------------------------------------------------------------*/
/*
    Elementary vector arithmetics.
*/

module VectorArithm;

use std;

procedure vadd( double v1[]; readonly double v2[] ): double[]
{
    v1[0] += v2[0];
    v1[1] += v2[1];
    v1[2] += v2[2];

    return v1;
}

function vsum( double v1[], v2[] ): double[]
{
    return vadd( v1[], v2 );
}

procedure vsub( double v1[]; readonly double v2[] ): double[]
{
    v1[0] -= v2[0];
    v1[1] -= v2[1];
    v1[2] -= v2[2];

    return v1;
}

function vdiff( double v1[], v2[] ): double[]
{
    return vsub( v1[], v2 );
}

procedure ktimesv( double k; double v[] ): double[]
{
    v[0] *= k;
    v[1] *= k;
    v[2] *= k;

    return v;
}

function kvproduct( double k; double v[] ): double[]
{
    return ktimesv( k, v[] );
}

end module VectorArithm;
