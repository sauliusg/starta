// --*- C -*--

// Test list expressions:

use std;

type list of T = ?{
    next : list of T;
    value : T;

    inline bytecode operator "new" () : list of T
    { ALLOC %%alloc_size %%nref };

    inline bytecode operator "mklist"( value : T ): list of T
    { MKLIST %%alloc_size %%nref const((list of T).next.offset)
             %.value %%element_size }
    
    inline bytecode operator "*" ( l : list of T ) : addressof
    { OFFSET %.value }

    inline bytecode operator "next"( l : list of T )
    { NEXT const((list of T).next.offset) %.value }

}; // type "list of T"

var b : list of int  = new (list of int);

b.value = 12;
. *b;

var a = (21,);

. *a;

var c = ("a string",);

. *c;
