//--*- Java -*--
// Compiler tests
//

use * from std;

inline bytecode procedure push( a : array of type T; value : T[] )
    -> array of type T
{
    APUSH
}

inline bytecode function nref( a : array ): int { NREF }
inline bytecode function capacity( a : array ): int { CAPACITY }

function print_array( array of type T a; function ( T[] element ) print )
{
    for var i = 0 to last(a) do
        print( a[i:i] );
    enddo
}

var m = new int[0];

. "length(m) ==", length(m);
. "nref(m)   ==", nref(m);

var n = 0;
while true {
    m = push( m, n );
    var l = length(m);
    if l < 16 or l % 100 == 0 { . l, capacity(m) }
    n ++;
    do break if n > 10000
}
