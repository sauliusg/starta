// --*- C -*--
// Check module (package) implementation.
//

// Checking the simplies case of the APUSH opcode and the generic
// 'push()' function:

use * from std;

inline bytecode procedure push( a : array of type T; value : T[] )
    -> array of type T
{
    APUSH
}

type I = generic int;

function print_array( array of I a; function ( I element ) print )
{
    foreach var I e in a do
        print( e );
    enddo
}

var m = [ 1, 3, 5, 7 ];

. "length(m) ==", length(m);
print_array( m, function( int i ) { . i } );

var n = [ 1.0, 3.0, 5.0, 7.0 ];

. "length(n) ==", length(n);
print_array( n, function( float i ) { . i } );

. "========================================";

m = push( m, [10] );

. "length(m) ==", length(m);
print_array( m, function( int i ) { . i } );

n = push( n, [123.12] );

. "length(n) ==", length(n);
print_array( n, function( float i ) { . i } );
