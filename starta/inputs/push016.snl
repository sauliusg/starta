//--*- Java -*--
// Compiler tests
//

use * from std;

inline bytecode procedure push( a : array of type T; value : T[] )
    -> array of type T
{
    APUSH
}

inline bytecode function nref( a : array ): int { NREF }

type R = generic ref;

function print_array( R a[];
                      function ( R element ) print )
{
    foreach var R e in a do
        print( e );
    enddo
}

var m : string[];

. "length(m) ==", length(m);
. "nref(m)   ==", nref(m);
print_array( m, function( string i ) { . i } );

. "========================================";

m = push( m, ["delta"] );

. "length(m) ==", length(m);
. "nref(m)   ==", nref(m);
print_array( m, function( string i ) { . i } );

. "========================================";

m = push( m, ["epsilon"] );

. "length(m) ==", length(m);
. "nref(m)   ==", nref(m);
print_array( m, function( string i ) { . i } );
