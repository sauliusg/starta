#
# Snail language compiler tests
#
#
# 'IF' conditional operator test
#

#
# See if the 'if ... then ... endif' operator works
#

type int = {
    size = 4;

    bytecode inline operator "jnz" ( x : int )
        { JNZ };
    bytecode inline operator "jz" ( x : int )
        { JZ };

    inline bytecode operator "ldc" () : int
        { LDCS }
};

var a : int;

a = 1;

bytecode {
    SLDC "First if:\n"
    SPRINT
};

if a then
    bytecode {
        SLDC "Now a is not-zero\n(actually, a is "
	SPRINT
	LD %a
	IPRINT 
	SLDC ")\n"
	SPRINT
    }
endif;

a = 0;

bytecode {
    SLDC "Second if:\n"
    SPRINT
};

if a then
    bytecode {
        SLDC "Now a is not-zero\n(actually, a is "
	SPRINT
	LD %a
	IPRINT 
	SLDC ")\n"
	SPRINT
    }
endif;

bytecode {
    SLDC "Third if:\n"
    SPRINT
};

forward function incn( x : int; n : int ) : int;
a = incn( a, 3 );

if a then
    bytecode {
        SLDC "Now a is not-zero\n(actually, a is "
	SPRINT
	LD %a
	IPRINT 
	SLDC ")\n"
	SPRINT
    }
endif;

function incn( x : int; n : int ) : int
{
    bytecode { LD %x LD %n ADD }
};
