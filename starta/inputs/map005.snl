#
# Test 'map' function
#

use * from std;

procedure map( p: function (x: array of type U)->(array of type V);
               m: array of type U;
               v: array of type V ): array of type V
{
    var vv = v[];
    for var i = 0 to last(m) do
        var e = m[i:i];
        // vv = push( v, p(e) );
        vv = push( vv, [v[0]] );
    enddo

    return vv;
}

var m = ["one","two","three"];

inline bytecode function ord( char c ) : byte {}
inline bytecode function chr( byte c ) : char {}
inline bytecode function str( blob b ) : string {}

function toupper( s: string ): string
{
    var m = new char[length(s)];

    for var i = 0 to last(s)-1 {
        m[i] = chr( ord(s[i]) - 32B );
    }

    var r: blob = new blob(length(s)+1);
    pack r, 0, "i1", m;
    return str(r);
}

var n = map( function (s:string[])->(string[]) { return [toupper(s[0])] }, m, new string[0] );

foreach var k in n do
    . k;
enddo
