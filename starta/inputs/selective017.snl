//--*- Java -*--
// Compiler tests
//

import std;
use type array from std;
use type int, string from std;
use function length from std;
use var true from std;

inline bytecode procedure push( a : array of type T; value : array of type T )
    -> array of type T
{
    APUSH
}

inline bytecode function nref( a : array ): int { NREF }
inline bytecode function capacity( a : array ): int { CAPACITY }
inline bytecode function trim( a : array of T ): array of T { TRIM }

var m = new int[0];

. "length(m) ==" string, length(m);
. "nref(m)   ==" string, nref(m);

var n = 0;
while true {
    m = push( m, [n] );
    var l = length(m);
    if l < 16 or l % 100 == 0 {
        . l, capacity(m), capacity(m=trim(m))
    }
    n ++;
    do break if n > 10000
}
